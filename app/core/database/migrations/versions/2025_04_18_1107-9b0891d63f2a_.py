"""empty message

Revision ID: 9b0891d63f2a
Revises: 32d5607c5cc0
Create Date: 2025-04-18 11:07:54.259471

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "9b0891d63f2a"
down_revision: str | None = "32d5607c5cc0"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "question",
        sa.Column("text", sa.String(length=255), nullable=False),
        sa.Column("answer", sa.String(length=255), nullable=False),
        sa.Column("hard_level", sa.SmallInteger(), nullable=False),
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "round",
        sa.Column(
            "type",
            sa.Enum("ROUND_1", "ROUND_2", "ROUND_3", name="roundtypeenum"),
            nullable=False,
        ),
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "theme",
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "game",
        sa.Column("chat_id", sa.BigInteger(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "LOBBY",
                "ROUND_1",
                "ROUND_2",
                "ROUND_3",
                "COMPLETED",
                name="gamestatusenum",
            ),
            nullable=False,
        ),
        sa.Column("master_id", sa.BigInteger(), nullable=False),
        sa.Column("active_user_id", sa.BigInteger(), nullable=False),
        sa.Column("choice_user_id", sa.BigInteger(), nullable=False),
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["active_user_id"],
            ["telegram_user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["choice_user_id"],
            ["telegram_user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["master_id"],
            ["telegram_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "question_to_theme",
        sa.Column("theme_id", sa.BigInteger(), nullable=False),
        sa.Column("question_id", sa.BigInteger(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("NOT_ANSWERED", "ANSWERED", "WAIT_ANSWERED", name="answerstatusenum"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["question.id"],
        ),
        sa.ForeignKeyConstraint(
            ["theme_id"],
            ["theme.id"],
        ),
        sa.PrimaryKeyConstraint("theme_id", "question_id"),
    )
    op.create_table(
        "telegram_user_to_round",
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("question_id", sa.BigInteger(), nullable=False),
        sa.Column("round_id", sa.BigInteger(), nullable=False),
        sa.Column(
            "state",
            sa.Enum("NOT_ANSWERED", "ANSWERED", "WAIT_ANSWERED", name="answerstatusenum"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["question.id"],
        ),
        sa.ForeignKeyConstraint(
            ["round_id"],
            ["round.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["telegram_user.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "question_id", "round_id"),
    )
    op.create_table(
        "theme_to_round",
        sa.Column("theme_id", sa.BigInteger(), nullable=False),
        sa.Column("round_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["round_id"],
            ["round.id"],
        ),
        sa.ForeignKeyConstraint(
            ["theme_id"],
            ["theme.id"],
        ),
        sa.PrimaryKeyConstraint("theme_id", "round_id"),
    )
    op.create_table(
        "timers",
        sa.Column("round_id", sa.BigInteger(), nullable=False),
        sa.Column("create_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("question_id", sa.BigInteger(), nullable=False),
        sa.Column("duration", sa.Interval(), nullable=False),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["question.id"],
        ),
        sa.ForeignKeyConstraint(
            ["round_id"],
            ["round.id"],
        ),
        sa.PrimaryKeyConstraint("round_id"),
    )
    op.create_table(
        "round_to_game",
        sa.Column("round_id", sa.BigInteger(), nullable=False),
        sa.Column("game_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["game.id"],
        ),
        sa.ForeignKeyConstraint(
            ["round_id"],
            ["round.id"],
        ),
        sa.PrimaryKeyConstraint("round_id", "game_id"),
    )
    op.create_table(
        "telegram_user_to_game",
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("game_id", sa.BigInteger(), nullable=False),
        sa.Column("score", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["game.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["telegram_user.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "game_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("telegram_user_to_game")
    op.drop_table("round_to_game")
    op.drop_table("timers")
    op.drop_table("theme_to_round")
    op.drop_table("telegram_user_to_round")
    op.drop_table("question_to_theme")
    op.drop_table("game")
    op.drop_table("theme")
    op.drop_table("round")
    op.drop_table("question")
    # ### end Alembic commands ###
